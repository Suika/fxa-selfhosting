version: "3.7"
networks:
  fxa-network:
    name: fxa-network
services:
  ############### dependecies ##############
  fxa-mysqldb: # used by fxa-profile-server fxa-auth-db-mysql pushbox syncserver
  #[TODO]: set a password
    image: mysql/mysql-server:5.6
    container_name: : fxa-mysqldb
    networks:
      - fxa-network
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_ROOT_HOST=%
    expose:
      - "3306" 
    volumes:
      - ${PERSISTENCEPATH:-.}/mysql_data:/var/lib/mysql/
      - ./_init/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
       #   -> Create database if not exists pushbox;
       #        -> add a scheduler to cleanup pushbox
       #   -> create database if not exists sync;
    logging: # do not show logs
      driver: "none"
    restart: unless-stopped

  fxa-redis: #used by fxa-email-service  fxa-profile-server fxa-content-server fxa-auth-server
    image: redis
    expose:
      - "6379"
    logging:
      driver: "none"
    restart: unless-stopped

  ###### internal dependencies
  browseridverifier.local: #used by syncserver and fxa-auth-server's oauth-server
  # uses fxa-auth-server (issuer)
  # a tld-like name is required for fxa-auth-server config's url type check
    image: mozilla/browserid-verifier # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    expose:
      - "5050"
    environment:
      - PORT=5050
      - IP_ADDRESS=0.0.0.0
      - FORCE_INSECURE_LOOKUP_OVER_HTTP=false
      - HTTP_TIMEOUT=60
    restart: unless-stopped
    # to override "npm" entrypoint and "start" command
    entrypoint: "node"
    command: "server.js"
    healthcheck:
      test: ["/bin/bash", "-c", "echo -e 'GET /status HTTP/1.1\r\n\r\n' | nc 127.0.0.1 5050 | grep -q 'HTTP/1.1 200 OK' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  fxa-syncserver:  #used by fxa-content-server
  #uses browserid-verifier / mysqldb
    # build:  #it seems that mozilla/syncserver already has PyMySQL
    #   dockerfile: Dockerfile_syncserver_mysql
    #   # FROM mozilla/syncserver
    #   # RUN pip install --upgrade PyMySQL==0.9.3
    #   #
    #   context: /dev/null
    image: mozilla/syncserver
    networks:
      - fxa-network
    expose:
      - "5000"
    environment:
      - WAIT_HOSTS=fxa-mysqldb:3306,nginx:443 # we need nginx for https://www.${DOMAIN_NAME}/.well-known/fxa-client-configuration
      - WAIT_HOSTS_TIMEOUT=120
      - SYNCSERVER_PUBLIC_URL=https://token.${DOMAIN_NAME} #:= meaning https://stackoverflow.com/a/10390436
      - SYNCSERVER_BROWSERID_VERIFIER=http://browseridverifier.local:5050
      # auto generate via syncserver / ?? use for  syncserver<-> tokenserver??
      # secret is generated in code. see syncserver/_init__.py:57
      # - SYNCSERVER_SECRET=${FXAHOST_SYNCSERVER_SECRET:=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20`}  #todo make it random
      - SYNCSERVER_SQLURI=mysql+pymysql://root@fxa-mysqldb/sync  #databasename: sync
      # - SYNCSERVER_SQLURI=sqlite:////tmp/syncserver.db
      - SYNCSERVER_BATCH_UPLOAD_ENABLED=true
      - SYNCSERVER_FORCE_WSGI_ENVIRON=true # because we have nginx proxy it 
      - PORT=5000
      # is SYNCSERVER_IDENTITY_PROVIDER necessary? yes it's important for fenix to use sync with oauth (verify by self fxa)
      # and since it depends on fxa-content-server 
      - SYNCSERVER_IDENTITY_PROVIDER=https://www.${DOMAIN_NAME}
    depends_on:
      - fxa-mysqldb
      - fxa-content-server 
    volumes:
      - ./wait:/wait
    entrypoint: sh -c "/wait && /usr/bin/dumb-init /app/docker-entrypoint.sh server"
    # entrypoint: sh -c "pip install --upgrade  PyMySQL==0.9.3 && /wait && /usr/bin/dumb-init /app/docker-entrypoint.sh server" if pymysql not installed?
    # command: "server"
    restart: unless-stopped

  pushbox.local: # used by fxa-auth-server 
  # a tld-like name is required for fxa-auth-server config's url type check
  # note manually delete old data? -> Done via _init/mysql/init.sql -> create event
  # see:  https://github.com/mozilla-services/pushbox#database
  # DELETE from pushboxv1 where TTL < unix_timestamp();
    image: mozilla/pushbox # if latest not work please specific :0.3.0 (last tested version)
    networks:
      - fxa-network
    expose:
      - "8002"
    environment:
      - ROCKET_ENV=prod

      - ROCKET_PORT=8002
      - ROCKET_SERVER_TOKEN=${FXAHOST_PUSHBOXKEY:-YOUR_LONG_ENOUGH_RANDOM_STRING} # should same as fxa-auth-server -> pushbox->key
      - ROCKET_DATABASE_URL=mysql://root@fxa-mysqldb/pushbox
      - WAIT_HOSTS=mysqldb:3306
      - WAIT_HOSTS_TIMEOUT=120
    depends_on:
      - mysqldb
    volumes:
      - ./wait:/wait
    command: sh -c "/wait && /app/bin/pushbox"
    restart: unless-stopped

  ##################
  fxa-auth-db-mysql:
    image: mozilla/fxa-auth-db-mysql # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    expose:
      - "8000"
    depends_on:
      - fxa-mysqldb
    volumes:
      - ./wait:/wait
    command: sh -c "/wait && node ./bin/db_patcher.js > /dev/null && node ./bin/server.js"
    environment:
      - WAIT_HOSTS=mysqldb:3306
      - WAIT_HOSTS_TIMEOUT=120
      #see fxa-auth-db-mysql/config/config.js
      - MYSQL_HOST=fxa-mysqldb
      # if MYSQL_PASSWORD MYSQL_USER MYSQL_PORT
      - MYSQL_SLAVE_HOST=fxa-mysqldb
      - ENABLE_PRUNING=true # to cleanup db
      - LOG_LEVEL=WARN
      - HOST=0.0.0.0 #for all
    restart: unless-stopped

  ##for non-send-mail-just-check-code-in-log
  fxa-auth-local-mail-helper:
  #[TODO] mails in const users ={} should be deleted 
    image: mozilla/fxa-auth-server # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    expose:
      - "9999"
    ports:
      # so you can curl http://127.0.0.1:9001/mail/<your-mail-addr-before-at-mark>  <- connection will not close until get one
      # or curl -X DELETE  http://127.0.0.1:9001/mail/<your-mail-addr-before-at-mark>  
      - "127.0.0.1:9001:9001"
    environment:
      - NODE_ENV=dev ## to avoid missing pushbox.key and etc...in fxa-auth-server\config\index.js line 1739
      - SMTP_PORT=9999  ##port for smtp server receive mail!!!
      # check mail via API
      - MAILER_HOST=0.0.0.0
      - MAILER_PORT=9001 # need ports to outside! for GET /mail/your-mail-address!
    command:  sh -c "npm i -D mailparser simplesmtp && node /app/test/mail_helper.js"
    restart: unless-stopped

  # # if your hosting allows you send email via smtp/25
  # exim-sender:
  #   image: elsdoerfer/exim-sender
  #   environment:
  #     - ALLOWED_HOSTS="192.168.0.0/16;172.16.0.0/12;10.0.0.0/8"
  #     - PRIMARY_HOST=${DOMAIN_NAME}
  #   expose:
  #     - "25"


  fxa-auth-server:
    image: mozilla/fxa-auth-server # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    expose:
      - "9000"
    depends_on:
      - fxa-auth-db-mysql
      - fxa-redis
    volumes:
      - ./wait:/wait
      # since i do not know which  client_id is real use 
      # so i add all client_ids from dev.json
      # 98e6508e88680e1a -> settings
      # 5882386c6d801776 -> firefox and sync? <- but i have not seen it in  enabledClientIds?  because it is not a publicClient ?
      # 
      # see lib/oauth/db/ -> preClients ?
      - ./_init/auth/oauthserver-prod.json:/app/config/prod.json
    environment:
      # since we do not use sns ,we make this prod
      - OAUTH_SERVER_SECRET_KEY=${FXAHOST_AUTH_SECRET:-What3v3r} # one of FXAHOST_OAUTH_SERVER_SECRETS
      - OAUTH_SERVER_SECRETS=${FXAHOST_AUTH_SECRET:-What3v3r} # split with comma
      - AUTH_SERVER_SHARED_SECRET=${FXAHOST_AUTH_SECRET:-What3v3r}
      - AUTH_SERVER_SECRETS=${FXAHOST_AUTH_SECRET:-What3v3r},realwhatever # 
      # - JWT_ACCESS_TOKENS_ENABLED=false
      # - JWT_ACCESS_TOKENS_ENABLED_CLIENT_IDS=98e6508e88680e1a
      - SUPPORT_PANEL_AUTH_SECRET_BEARER_TOKEN=${FXAHOST_SUPPORT_PANEL_SERVER_AUTH_SECRET_BEARER_TOKEN:-SUPPORT_PANEL_IS_NOT_SUPPORTED} # just pass config check , we have no  support 
      - PROFILE_SERVER_AUTH_SECRET_BEARER_TOKEN=${FXAHOST_PROFILE_SERVER_AUTH_SECRET_BEARER_TOKEN:-I_DONT_WANT_TO_CHANGE_YOU} # same as profile server AUTH_SECRET_BEARER_TOKEN
      - FLOW_ID_KEY=${FXAHOST_FLOWIDKEY:-MY_FLOW_ID_KEY} #same as content-server 's
      - REDIS_HOST=fxa-redis
      - ACCESS_TOKEN_REDIS_HOST=redis # new in v1.160.0
      
      # sqs for 3rd rp
      # sns for profile/sync/pushbox


      # if (conf.has('snsTopicEndpoint') && conf.get('env') !== 'dev') {
      #   throw new Error('snsTopicEndpoint is only allowed in dev env');
      # }
      - SNS_TOPIC_ARN=disabled

      - SMS_ENABLED=false
      - SMS_ENABLE_BUDGET_CHECKS=false
      #  'Address:port of the memcached server (or `none` to disable memcached)',
      - MEMCACHE_METRICS_CONTEXT_ADDRESS=none  

      # for oauth
      - DB=mysql 
      - MYSQL_HOST=fxa-mysqldb

      - HTTPDB_URL=http://fxa-auth-db-mysql:8000 # 
      - IP_ADDRESS=0.0.0.0
      # 
      - SIGNIN_UNBLOCK_FORCED_EMAILS=^block.*@restmail\\.net$$
      - SIGNIN_CONFIRMATION_ENABLED=true
      - SIGNIN_CONFIRMATION_FORCE_EMAIL_REGEX=^sync.*@restmail\\.net$$
      # SIGNIN_CONFIRMATION_SKIP_FOR_NEW_ACCOUNTS -> do not need sigincode?
      # SIGNIN_CONFIRMATION_SKIP_FOR_EMAIL_ADDRESS -> or this?
      
      - ISSUER=api.${DOMAIN_NAME}
      - PUBLIC_URL=https://api.${DOMAIN_NAME}
      - OAUTH_URL=https://oauth.${DOMAIN_NAME}
      - AUTH_SERVER_URL=https://api.${DOMAIN_NAME}
      - CONTENT_SERVER_URL=https://www.${DOMAIN_NAME} # for urls in email
      # lib/profile/client.js 
      # use for subhub delete cache , could be inner url 
      - PROFILE_SERVER_URL=https://profile.${DOMAIN_NAME}
      - FXA_OPENID_ISSUER=https://www.${DOMAIN_NAME}
      # convict -> url a valid url (need tld)
      - VERIFICATION_URL=http://browseridverifier.local:5050/v2

      - PUSHBOX_KEY=${FXAHOST_PUSHBOXKEY:-YOUR_LONG_ENOUGH_RANDOM_STRING}  # same as pushbox's
      # convict -> url a valid url (need tld)
      - PUSHBOX_URL=http://pushbox.local:8002
      - PUSHBOX_ENABLED=true

      - CUSTOMS_SERVER_URL=none #disable it
      # [TODO] do i need generate new key?
      # npm run gen-keys -> however if file exists will fail
      - FXA_OPENID_KEYFILE=config/key.json
      - FXA_OPENID_NEWKEYFILE=config/newKey.json
      - FXA_OPENID_OLDKEYFILE=config/oldKey.json


      # send mail via nodemailer to SMTP_HOST:SMTP_PORT
      # see auth-server/lib/senders/index.js -> line 25 config.smtp.
      #  select_email_services.js ln 160 -> get mailer (self smtp server)
      # only those in EMAIL_SERVICE_FORCE_EMAIL_REGEX will use fxa-email-service
      - SMTP_SENDER="Firefox Accounts <no-reply@${DOMAIN_NAME}>"
      
      # this for non-send-mail-just-check-code-in-log
      - SMTP_HOST=fxa-auth-local-mail-helper
      - SMTP_PORT=9999

      # real send mail self hosting if your provider allow smtp/25
      # - SMTP_HOST=exim-sender
      # - SMTP_PORT=25

      # 3rd part stmp replay service
      # - SMTP_HOST=
      # - SMTP_PORT=
      # - SMTP_USER=
      # - SMTP_PASS=
      # - SMTP_SECURE=true


      - GEODB_ENABLED=false

      - WAIT_HOSTS=fxa-redis:6379,fxa-auth-db-mysql:8000
      - WAIT_HOSTS_TIMEOUT=120
      - LOG_LEVEL=WARN
    command: sh -c "/wait && node /app/bin/key_server.js"
    restart: unless-stopped

  # fxa-event-broker:
  #   image: mozilla/fxa-event-broker
  #   depends_on:
  #     # - firestore
  #     - pubsub
  #     - goaws
  #   environment:
  #     - NODE_ENV=development # just another word to avoid prod/dev
  #     - FIRESTORE_ENABLED=false
  #     # - FIRESTORE_EMULATOR_HOST=http://firestore:9090
  #     - PUBSUB_EMULATOR_HOST=http://pubsub:8085
  #     - SERVICE_NOTIFICATION_QUEUE_URL=http://goaws:4100/serviceNotifications
  #     #goaws:4100 do not work beacuse hardcoded localhost:4100 in workerDev.js
  #   command: sh -c "rm /app/config/development.json && node /app/dist/bin/workerDev.js"

  # fxa-profile-static and  fxa-profile-worker should share /var/public
  fxa-profile-static:
    image: mozilla/fxa-profile-server # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    volumes:
      - ${PERSISTENCEPATH:-.}/public:/app/var/public/:ro
    expose:
      - "1112"
    environment:
      - HOST=0.0.0.0
      - IMG=local
    command: ["node","/app/bin/_static.js"]
    restart: unless-stopped

  fxa-profile-worker:
    #just compute image and upload to aws/ local_public
    image: mozilla/fxa-profile-server # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    volumes:
      #cannot write? i'm app but folder:node
      - ${PERSISTENCEPATH:-.}/public:/app/var/public/
    expose:
      - "1113"
    environment:
      - WORKER_HOST=0.0.0.0
      - IMG=local
    command: ["node","/app/bin/worker.js"]
    restart: unless-stopped

  fxa-profile-server:
    image: mozilla/fxa-profile-server # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    expose:
      - "1111"
    depends_on:
      - fxa-mysqldb
      - fxa-redis
    environment:
      - WAIT_HOSTS=mysqldb:3306,fxa-redis:6379
      - WAIT_HOSTS_TIMEOUT=120
      - AUTH_SECRET_BEARER_TOKEN=${FXAHOST_PROFILE_SERVER_AUTH_SECRET_BEARER_TOKEN:-I_DONT_WANT_TO_CHANGE_YOU} # same as authserver profile PROFILE_SERVER_AUTH_SECRET_BEARER_TOKEN
      #we do not need sqs events
      - EVENTS_ENABLED=false

      - HOST=0.0.0.0
      - DB=mysql
      - IMG_PROVIDERS_FXA=^https://profile.$DOMAIN_NAME/img/a/[0-9a-f]{32}$$ #last $ need escape? yes
      - IMG_URL=https://profile.$DOMAIN_NAME/img/a/{id}
      - MYSQL_HOST=fxa-mysqldb
      # merge from fxa-profile-server/config/development.json
      - IMG=local
      - AUTH_SERVER_URL=https://api.${DOMAIN_NAME}/v1 #prefer public url need v1?
      - OAUTH_SERVER_URL=https://oauth.${DOMAIN_NAME}/v1 #prefer public url need v1?

      - REDIS_HOST=fxa-redis

      - WORKER_URL=http://fxa-profile-worker:1113
      #- PUBLIC_URL  -> but not used in code?
    #command:  #need wait for it
    volumes:
      - ./wait:/wait
      - ${PERSISTENCEPATH:-.}/public:/app/var/public/ #new added (because of npm preinstall is removed , so in docker images there's no /app/var/public , however it is not used )
    command: sh -c "/wait && node /app/bin/server.js"
    restart: unless-stopped

  fxa-content-server:
    image: mozilla/fxa-content-server # if latest not work please specific :v1.161.1 (last tested version)
    networks:
      - fxa-network
    expose:
      - "3030"
    depends_on:
      - fxa-auth-server
      - fxa-profile-server
      - fxa-redis
    environment:
      - FXA_OAUTH_CLIENT_ID=ea3ca969f8c6bb0d # this is important!! maybe...
      - FLOW_ID_KEY=${FXAHOST_FLOWIDKEY:-MY_FLOW_ID_KEY} #same as auth-server 's
      - FEATURE_FLAGS_REDIS_HOST=fxa-redis
      # display in /.well-known/fxa-client-configuration -> sync_tokenserver_base_url
      # todo paring_server_base_uri is not right see github/mozilla/fxa-pairing-channel

      - SYNC_TOKENSERVER_URL=https://token.${DOMAIN_NAME}/token  # i prefer publicurl 
      
      - PUBLIC_URL=https://www.${DOMAIN_NAME} # we now use www represent for content
      - FXA_OAUTH_URL=https://oauth.${DOMAIN_NAME}
      - FXA_URL=https://api.${DOMAIN_NAME}
      - FXA_PROFILE_URL=https://profile.${DOMAIN_NAME}
      - FXA_PROFILE_IMAGES_URL=https://profile.${DOMAIN_NAME}

      - FXA_MARKETING_EMAIL_ENABLED=false # no marketing

      - GEODB_ENABLED=false
      - LOG_LEVEL=WARN

      # for minify js and css
      - NODE_ENV=production
      - STATIC_DIRECTORY=dist
      - PAGE_TEMPLATE_SUBDIRECTORY=dist
      # may helpful?
      - CSP_ENABLED=true

      #  oauth_client_id  <- so fxa-content-server (fxa settings) is a oauth?
      # client session secret
    command: ["node","/app/scripts/run_locally.js"]
    restart: unless-stopped

  # fxa-email-service:
  #   image: mozilla/fxa-email-service
    # env -> howto see rust config-rs 
    #todo env all depends service host:port
  # local mail helper?

  fxa-nginx:
  # [TODO] auto renew cert!
    image: nginx
    networks:
      - fxa-network
    ports:
      - "443:443" # the real outer port
    depends_on:
      - fxa-auth-server
      - fxa-profile-server
      - syncserver #cycle dependce? break via do not set SYNCSERVER_IDENTITY_PROVIDER
      # nope! nginx need only this service's name resolvable (which resolvable when container is up)
      # sync ->  depends on content(www)  -> depends nginx ->  sync up is enough
      - fxa-content-server
    volumes:
      #  resolver 127.0.0.11 valid=30s; => to allow up without depends ?
      - ./_init/nginx/fxa.conf.tmpl:/etc/nginx/conf.d/fxa.conf.tmpl:ro
      # change  proxy pass from 127.0.0.1 to dnshostname
      # change  cert location
      - ${PROFILE_CERT}:/certs/profile.cer:ro
      - ${PROFILE_CERTKEY}:/certs/profile.key:ro
      
      - ${AUTH_CERT}:/certs/auth.cer:ro
      - ${AUTH_CERTKEY}:/certs/auth.key:ro

      - ${TOKEN_CERT}:/certs/token.cer:ro
      - ${TOKEN_CERTKEY}:/certs/token.key:ro

      - ${CONTENT_CERT}:/certs/content.cer:ro
      - ${CONTENT_CERTKEY}:/certs/content.key:ro
      # - ./_init/nginx/certs:/certs:ro
    environment:
      - NGINX_DOMAIN_NAME=${DOMAIN_NAME} # for replacement in fxa.conf.tmpl
    logging:
      driver: "none"
    #use envsubst only replace domain name https://github.com/docker-library/docs/issues/496#issuecomment-186149231
    command:  /bin/sh -c "envsubst '$$NGINX_DOMAIN_NAME' < /etc/nginx/conf.d/fxa.conf.tmpl > /etc/nginx/conf.d/fxa.conf && nginx -g 'daemon off;'"
    restart: unless-stopped

#write a .sh
# create db folder , create public folder (chmod a+w public)
# get https://github.com/ufoscout/docker-compose-wait/releases/download/2.7.3/wait
# cert and nginx conf with domain
# after cert expire , docker-compose exec nginx -s reload or just restart it?
# or use cloudflare which could ignore expired cert?


# todo all events
# todo auth -> prod , but snsTopicEndpoint needs dev!!!
# remove auth's dev.json unused.

#issue 1. covinct valid url for pushbox and browser-verify 
#          -> docker-compose network alias may help
#issue 2 .geodata with proxy_pass 127.0.0.1?
#issue 3. is fxa-event-broker necessary for self hosting?
#         -> No

#this is no need
## auth ->(send)-> sqs ->(get) -> event-broker -> reply party(3rd)

## auth -> sns(via topic to all counsumer) 
#                 -> sync-tokenserver script:process_account_evnet.py (may need manual run and config) 
#                      ( delete / reset / passwordChange)
#                 -> pushbox (delete[which is account] / device:delete)  
#                 -> profile (delete primaryEmailChanged profileDataChanged)
#                 ?-> content?
# profile use fxa-notifier-aws which cannot set endpoint
# tokenserver cannot set endpoint too 
# what if we set goaws -> us-east-1.amazonaws.com //
#
# pushbox can change . but consume too slow and not necessary
# so append it on your own risk
# for pushbox 
# add
#   fxa-auth-server 
#     environment:
#       - NODE_ENV=dev # to enable SNS_TOPIC_ENDPOINT
#       - SNS_TOPIC_ENDPOINT=http://goaws:4100/
#       - SNS_TOPIC_ARN=arn:aws:sns:local-01:000000000000:local-topic1
# add
#     pushbox.local
#       environment:
#         - AWS_LOCAL_SQS=http://goaws:4100 # this sqs is for get message of device/account delete to delete these device/account unused messages.
#         - ROCKET_SQS_URL="http://goaws:4100/100010001000/local-queue3" # # local-queue3 is under local-topic1 define by goaws/goaws.yaml
#         - WAIT_HOSTS=mysqldb:3306,goaws:4100
# add
#     goaws: #used by fxa-event-broker fxa-auth-server push.local
#       image: pafortin/goaws
#       expose:
#         - "4100"
#       logging:
#         driver: "none"
#      
#

#
# # if you want to use set fxa-auth-server MEMCACHE_METRICS_CONTEXT_ADDRESS=memecahced:11211
# memcached: #used by fxa-auth-server fxa-customs-server
# #used as auth's metric and custom # so not necessary
#   image: memcached
#   expose:
#     - "11211"
#   logging:
#     driver: "none"


